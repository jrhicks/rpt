import path from 'path';

class <%=ctx.camelizeName()%>Generator {

  constructor({gen, command, name, args}) {
    this.gen = gen;
    this.command = command;
    this.name = name;
    this.args = args;
  }

  run() {
    let gen = this.gen;
    let fname = `${this.camelizeName()}<%=ctx.camelizeName()%>.js`

    switch (this.command) {
     default:
      gen.template('template.js.ejs', path.join('<%=ctx.pluralDasherizeName()%>', fname));
    }
  }

  inspect(v) {
    return JSON.stringify(v);
  }

  pluralizeName() {
    return this.gen.inflect.pluralize(this.name);
  }

  titleizeName() {
    return this.gen.inflect.titleize(this.name);
  }

  dasherizeName() {
    return this.gen.inflect.dasherize(this.name);
  }

  camelizeName() {
    return this.gen.inflect.camelize(this.name);
  }

}

module.exports = <%=ctx.camelizeName()%>Generator;
